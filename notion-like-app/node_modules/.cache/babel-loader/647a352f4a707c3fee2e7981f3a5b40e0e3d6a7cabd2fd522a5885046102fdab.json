{"ast":null,"code":"var _jsxFileName = \"/Users/nathantrung/Desktop/Web App/notion-like-app/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [user, setUser] = useState(null); // Holds the user data fetched from MongoDB\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch User Details and Weather Data\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Get the JWT token from localStorage\n        if (!token) {\n          setError('User not logged in');\n          return;\n        }\n\n        // Fetch user details from the backend\n        const userResponse = await axios.get('http://localhost:3000/api/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // Pass the token in the headers\n        });\n        setUser(userResponse.data); // Set the user data\n      } catch (err) {\n        console.error('Error fetching user details:', err);\n        setError('Unable to fetch user details');\n      }\n    };\n    const fetchWeather = async () => {\n      try {\n        const apiKey = 'b6cb2550030525248435437ce562d4bb'; // Replace with your OpenWeatherMap API key\n        const city = 'Melbourne'; // Default location\n        const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`);\n        setWeather(response.data);\n      } catch (err) {\n        setError('Unable to fetch weather data');\n      }\n    };\n    fetchUserDetails();\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center pt-96 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: [\"Hello, \", user ? user.name : 'Guest', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), weather ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"The weather in \", weather.name, \" is \", weather.weather[0].description, \" with a temperature of \", weather.main.temp, \"\\xB0C.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"3Mqs+uptuFydP33S8dXT1zLMRmk=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Homepage","_s","user","setUser","weather","setWeather","error","setError","fetchUserDetails","token","localStorage","getItem","userResponse","get","headers","Authorization","data","err","console","fetchWeather","apiKey","city","response","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","main","temp","_c","$RefreshReg$"],"sources":["/Users/nathantrung/Desktop/Web App/notion-like-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Homepage = () => {\n  const [user, setUser] = useState(null); // Holds the user data fetched from MongoDB\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch User Details and Weather Data\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Get the JWT token from localStorage\n        if (!token) {\n          setError('User not logged in');\n          return;\n        }\n\n        // Fetch user details from the backend\n        const userResponse = await axios.get('http://localhost:3000/api/user', {\n          headers: { Authorization: `Bearer ${token}` }, // Pass the token in the headers\n        });\n\n        setUser(userResponse.data); // Set the user data\n      } catch (err) {\n        console.error('Error fetching user details:', err);\n        setError('Unable to fetch user details');\n      }\n    };\n\n    const fetchWeather = async () => {\n      try {\n        const apiKey = 'b6cb2550030525248435437ce562d4bb'; // Replace with your OpenWeatherMap API key\n        const city = 'Melbourne'; // Default location\n        const response = await axios.get(\n          `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`\n        );\n\n        setWeather(response.data);\n      } catch (err) {\n        setError('Unable to fetch weather data');\n      }\n    };\n\n    fetchUserDetails();\n    fetchWeather();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col justify-center items-center pt-96 bg-gray-100\">\n      <h1 className=\"text-3xl font-bold mb-6\">\n        Hello, {user ? user.name : 'Guest'}!\n      </h1>\n      {weather ? (\n        <p className=\"text-lg\">\n          The weather in {weather.name} is {weather.weather[0].description} with a temperature of {weather.main.temp}Â°C.\n        </p>\n      ) : error ? (\n        <p className=\"text-red-500\">{error}</p>\n      ) : (\n        <p>Loading weather...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Homepage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}