{"ast":null,"code":"var _jsxFileName = \"/Users/nathantrung/Desktop/Web App/notion-like-app/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  const userName = localStorage.getItem('userName') || 'Guest'; // Retrieve name from localStorage\n\n  // Fetch Weather Data\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = 'YOUR_API_KEY'; // Replace with your OpenWeatherMap API key\n        const city = 'Melbourne'; // Default location\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`);\n        setWeather(response.data);\n      } catch (err) {\n        setError('Unable to fetch weather data');\n      }\n    };\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center pt-52 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: [\"Hello, \", userName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), weather ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"The weather in \", weather.name, \" is \", weather.weather[0].description, \" with a temperature of \", weather.main.temp, \"\\xB0C.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"dducRVO0pCJQnxjTimDps8bxXd8=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Homepage","_s","weather","setWeather","error","setError","userName","localStorage","getItem","fetchWeather","apiKey","city","response","get","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","main","temp","_c","$RefreshReg$"],"sources":["/Users/nathantrung/Desktop/Web App/notion-like-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Homepage = () => {\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  const userName = localStorage.getItem('userName') || 'Guest'; // Retrieve name from localStorage\n\n  // Fetch Weather Data\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = 'YOUR_API_KEY'; // Replace with your OpenWeatherMap API key\n        const city = 'Melbourne'; // Default location\n        const response = await axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`\n        );\n        setWeather(response.data);\n      } catch (err) {\n        setError('Unable to fetch weather data');\n      }\n    };\n\n    fetchWeather();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col justify-center items-center pt-52 bg-gray-100\">\n      <h1 className=\"text-3xl font-bold mb-6\">\n        Hello, {userName}!\n      </h1>\n      {weather ? (\n        <p className=\"text-lg\">\n          The weather in {weather.name} is {weather.weather[0].description} with a temperature of {weather.main.temp}Â°C.\n        </p>\n      ) : error ? (\n        <p className=\"text-red-500\">{error}</p>\n      ) : (\n        <p>Loading weather...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Homepage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMU,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC;;EAE9D;EACAb,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,MAAM,GAAG,cAAc,CAAC,CAAC;QAC/B,MAAMC,IAAI,GAAG,WAAW,CAAC,CAAC;QAC1B,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAC9B,qDAAqDF,IAAI,uBAAuBD,MAAM,EACxF,CAAC;QACDP,UAAU,CAACS,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZV,QAAQ,CAAC,8BAA8B,CAAC;MAC1C;IACF,CAAC;IAEDI,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKiB,SAAS,EAAC,6DAA6D;IAAAC,QAAA,gBAC1ElB,OAAA;MAAIiB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,GAAC,SAC/B,EAACX,QAAQ,EAAC,GACnB;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJnB,OAAO,gBACNH,OAAA;MAAGiB,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,iBACN,EAACf,OAAO,CAACoB,IAAI,EAAC,MAAI,EAACpB,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACqB,WAAW,EAAC,yBAAuB,EAACrB,OAAO,CAACsB,IAAI,CAACC,IAAI,EAAC,QAC7G;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACFjB,KAAK,gBACPL,OAAA;MAAGiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEvCtB,OAAA;MAAAkB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}