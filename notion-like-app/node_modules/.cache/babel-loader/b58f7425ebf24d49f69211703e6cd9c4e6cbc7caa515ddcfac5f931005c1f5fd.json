{"ast":null,"code":"var _jsxFileName = \"/Users/nathantrung/Desktop/Web App/notion-like-app/src/pages/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [error, setError] = useState(null);\n\n  // Fetch Chat History\n  const fetchChatHistory = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/chat');\n      setChats(response.data);\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n      setError('Unable to fetch chat history.');\n    }\n  };\n\n  // Start New Chat\n  const startNewChat = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/api/chat');\n      setChats(prevChats => [...prevChats, response.data]); // Update chats immediately\n      setCurrentChatId(response.data.id);\n      setMessages([]);\n    } catch (err) {\n      console.error('Error starting new chat:', err);\n      setError('Unable to start a new chat.');\n    }\n  };\n\n  // Delete Chat\n  const deleteChat = async chatId => {\n    try {\n      await axios.delete(`http://localhost:3000/api/chat/${chatId}`);\n      setChats(prevChats => prevChats.filter(chat => chat.id !== chatId));\n      if (chatId === currentChatId) {\n        setCurrentChatId(null);\n        setMessages([]);\n      }\n    } catch (err) {\n      console.error('Error deleting chat:', err);\n      setError('Unable to delete chat.');\n    }\n  };\n\n  // Send Message\n  const sendMessage = async () => {\n    if (!input.trim() || !currentChatId) return;\n    const newMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInput('');\n    try {\n      const response = await axios.post(`http://localhost:3000/api/chat/${currentChatId}/message`, newMessage);\n      setMessages(prev => [...prev, response.data]);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Unable to send message.');\n    }\n  };\n\n  // Fetch Messages for Selected Chat\n  const selectChat = chatId => {\n    const selectedChat = chats.find(chat => chat.id === chatId);\n    if (selectedChat) {\n      setCurrentChatId(chatId);\n      setMessages(selectedChat.messages);\n    }\n  };\n  useEffect(() => {\n    fetchChatHistory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 p-4 border-r\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-4\",\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between cursor-pointer mb-2 p-2 border rounded hover:bg-gray-200\",\n        onClick: () => selectChat(chat.id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Chat \", chat.id, \" - \", new Date(chat.createdAt).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-red-500 hover:text-red-700\",\n          onClick: e => {\n            e.stopPropagation();\n            deleteChat(chat.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, chat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewChat,\n        className: \"mt-4 w-full bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Start New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-scroll border mb-4 p-4\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No messages yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this) : messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 mb-2 ${msg.role === 'user' ? 'text-right bg-blue-100' : 'text-left bg-gray-100'}`,\n          children: msg.content\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 border px-4 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"ml-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"GfkQeyBMzbix4bdfbHqIAFDWd7o=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatBot","_s","chats","setChats","currentChatId","setCurrentChatId","messages","setMessages","input","setInput","error","setError","fetchChatHistory","response","get","data","err","console","startNewChat","post","prevChats","id","deleteChat","chatId","delete","filter","chat","sendMessage","trim","newMessage","role","content","prev","selectChat","selectedChat","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","Date","createdAt","toLocaleDateString","e","stopPropagation","length","msg","idx","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/nathantrung/Desktop/Web App/notion-like-app/src/pages/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ChatBot = () => {\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [error, setError] = useState(null);\n\n  // Fetch Chat History\n  const fetchChatHistory = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/chat');\n      setChats(response.data);\n    } catch (err) {\n      console.error('Error fetching chat history:', err);\n      setError('Unable to fetch chat history.');\n    }\n  };\n\n  // Start New Chat\n  const startNewChat = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/api/chat');\n      setChats((prevChats) => [...prevChats, response.data]); // Update chats immediately\n      setCurrentChatId(response.data.id);\n      setMessages([]);\n    } catch (err) {\n      console.error('Error starting new chat:', err);\n      setError('Unable to start a new chat.');\n    }\n  };\n\n  // Delete Chat\n  const deleteChat = async (chatId) => {\n    try {\n      await axios.delete(`http://localhost:3000/api/chat/${chatId}`);\n      setChats((prevChats) => prevChats.filter((chat) => chat.id !== chatId));\n      if (chatId === currentChatId) {\n        setCurrentChatId(null);\n        setMessages([]);\n      }\n    } catch (err) {\n      console.error('Error deleting chat:', err);\n      setError('Unable to delete chat.');\n    }\n  };\n\n  // Send Message\n  const sendMessage = async () => {\n    if (!input.trim() || !currentChatId) return;\n    const newMessage = { role: 'user', content: input };\n\n    setMessages((prev) => [...prev, newMessage]);\n    setInput('');\n\n    try {\n      const response = await axios.post(\n        `http://localhost:3000/api/chat/${currentChatId}/message`,\n        newMessage\n      );\n      setMessages((prev) => [...prev, response.data]);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Unable to send message.');\n    }\n  };\n\n  // Fetch Messages for Selected Chat\n  const selectChat = (chatId) => {\n    const selectedChat = chats.find((chat) => chat.id === chatId);\n    if (selectedChat) {\n      setCurrentChatId(chatId);\n      setMessages(selectedChat.messages);\n    }\n  };\n\n  useEffect(() => {\n    fetchChatHistory();\n  }, []);\n\n  return (\n    <div className=\"flex\">\n      {/* Chat History Panel */}\n      <div className=\"w-1/3 p-4 border-r\">\n        <h2 className=\"font-bold mb-4\">Chat History</h2>\n        {chats.map((chat) => (\n          <div\n            key={chat.id}\n            className=\"flex items-center justify-between cursor-pointer mb-2 p-2 border rounded hover:bg-gray-200\"\n            onClick={() => selectChat(chat.id)}\n          >\n            <span>Chat {chat.id} - {new Date(chat.createdAt).toLocaleDateString()}</span>\n            <button\n              className=\"text-red-500 hover:text-red-700\"\n              onClick={(e) => {\n                e.stopPropagation();\n                deleteChat(chat.id);\n              }}\n            >\n              Delete\n            </button>\n          </div>\n        ))}\n        <button\n          onClick={startNewChat}\n          className=\"mt-4 w-full bg-blue-500 text-white px-4 py-2 rounded\"\n        >\n          Start New Chat\n        </button>\n      </div>\n\n      {/* Chat Box */}\n      <div className=\"w-2/3 p-4\">\n        <div className=\"h-96 overflow-y-scroll border mb-4 p-4\">\n          {messages.length === 0 ? (\n            <p className=\"text-gray-500\">No messages yet.</p>\n          ) : (\n            messages.map((msg, idx) => (\n              <div\n                key={idx}\n                className={`p-2 mb-2 ${\n                  msg.role === 'user' ? 'text-right bg-blue-100' : 'text-left bg-gray-100'\n                }`}\n              >\n                {msg.content}\n              </div>\n            ))\n          )}\n        </div>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n            className=\"flex-1 border px-4 py-2 rounded\"\n          />\n          <button\n            onClick={sendMessage}\n            className=\"ml-4 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n          >\n            Send\n          </button>\n        </div>\n        {error && <p className=\"text-red-500 mt-4\">{error}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}